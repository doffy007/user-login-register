// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	handler "github.com/doffy007/user-login-register/internal/handler"
	mock "github.com/stretchr/testify/mock"
)

// Handler is an autogenerated mock type for the Handler type
type Handler struct {
	mock.Mock
}

// UserHandler provides a mock function with given fields:
func (_m *Handler) UserHandler() handler.UserHandler {
	ret := _m.Called()

	var r0 handler.UserHandler
	if rf, ok := ret.Get(0).(func() handler.UserHandler); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(handler.UserHandler)
		}
	}

	return r0
}

type mockConstructorTestingTNewHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandler creates a new instance of Handler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandler(t mockConstructorTestingTNewHandler) *Handler {
	mock := &Handler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
