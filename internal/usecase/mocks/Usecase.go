// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	usecase "github.com/doffy007/user-login-register/internal/usecase"
	mock "github.com/stretchr/testify/mock"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// UserHandler provides a mock function with given fields:
func (_m *Usecase) UserHandler() usecase.UserUsecase {
	ret := _m.Called()

	var r0 usecase.UserUsecase
	if rf, ok := ret.Get(0).(func() usecase.UserUsecase); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(usecase.UserUsecase)
		}
	}

	return r0
}

type mockConstructorTestingTNewUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewUsecase creates a new instance of Usecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUsecase(t mockConstructorTestingTNewUsecase) *Usecase {
	mock := &Usecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
